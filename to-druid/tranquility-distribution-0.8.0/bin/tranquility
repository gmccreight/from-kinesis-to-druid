#!/usr/bin/env bash

###  ------------------------------- ###
###  Helper methods for BASH scripts ###
###  ------------------------------- ###

die() {
  echo "$@" 1>&2
  exit 1
}

realpath () {
(
  TARGET_FILE="$1"
  CHECK_CYGWIN="$2"

  cd "$(dirname "$TARGET_FILE")"
  TARGET_FILE=$(basename "$TARGET_FILE")

  COUNT=0
  while [ -L "$TARGET_FILE" -a $COUNT -lt 100 ]
  do
      TARGET_FILE=$(readlink "$TARGET_FILE")
      cd "$(dirname "$TARGET_FILE")"
      TARGET_FILE=$(basename "$TARGET_FILE")
      COUNT=$(($COUNT + 1))
  done

  if [ "$TARGET_FILE" == "." -o "$TARGET_FILE" == ".." ]; then
    cd "$TARGET_FILE"
    TARGET_FILEPATH=
  else
    TARGET_FILEPATH=/$TARGET_FILE
  fi

  # make sure we grab the actual windows path, instead of cygwin's path.
  if [[ "x$CHECK_CYGWIN" == "x" ]]; then
    echo "$(pwd -P)/$TARGET_FILE"
  else
    echo $(cygwinpath "$(pwd -P)/$TARGET_FILE")
  fi
)
}

# TODO - Do we need to detect msys?

# Uses uname to detect if we're in the odd cygwin environment.
is_cygwin() {
  local os=$(uname -s)
  case "$os" in
    CYGWIN*) return 0 ;;
    *)  return 1 ;;
  esac
}

# This can fix cygwin style /cygdrive paths so we get the
# windows style paths.
cygwinpath() {
  local file="$1"
  if is_cygwin; then
    echo $(cygpath -w $file)
  else
    echo $file
  fi
}

# Make something URI friendly
make_url() {
  url="$1"
  local nospaces=${url// /%20}
  if is_cygwin; then
    echo "/${nospaces//\\//}"
  else
    echo "$nospaces"
  fi
}

# This crazy function reads in a vanilla "linux" classpath string (only : are separators, and all /),
# and returns a classpath with windows style paths, and ; separators.
fixCygwinClasspath() {
  OLDIFS=$IFS
  IFS=":"
  read -a classpath_members <<< "$1"
  declare -a fixed_members
  IFS=$OLDIFS
  for i in "${!classpath_members[@]}"
  do
    fixed_members[i]=$(realpath "${classpath_members[i]}" "fix")
  done
  IFS=";"
  echo "${fixed_members[*]}"
  IFS=$OLDIFS
}

# Fix the classpath we use for cygwin.
fix_classpath() {
  cp="$1"
  if is_cygwin; then
    echo "$(fixCygwinClasspath "$cp")"
  else 
    echo "$cp"
  fi
}
# Detect if we should use JAVA_HOME or just try PATH.
get_java_cmd() {
  if [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]];  then
    echo "$JAVA_HOME/bin/java"
  else
    echo "java"
  fi
}

echoerr () {
  echo 1>&2 "$@"
}
vlog () {
  [[ $verbose || $debug ]] && echoerr "$@"
}
dlog () {
  [[ $debug ]] && echoerr "$@"
}
execRunner () {
  # print the arguments one to a line, quoting any containing spaces
  [[ $verbose || $debug ]] && echo "# Executing command line:" && {
    for arg; do
      if printf "%s\n" "$arg" | grep -q ' '; then
        printf "\"%s\"\n" "$arg"
      else
        printf "%s\n" "$arg"
      fi
    done
    echo ""
  }

  # we use "exec" here for our pids to be accurate.
  exec "$@"
}
addJava () {
  dlog "[addJava] arg = '$1'"
  java_args+=( "$1" )
}
addApp () {
  dlog "[addApp] arg = '$1'"
  app_commands+=( "$1" )
}
addResidual () {
  dlog "[residual] arg = '$1'"
  residual_args+=( "$1" )
}
addDebugger () {
  addJava "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$1"
}

require_arg () {
  local type="$1"
  local opt="$2"
  local arg="$3"
  if [[ -z "$arg" ]] || [[ "${arg:0:1}" == "-" ]]; then
    die "$opt requires <$type> argument"
  fi
}
is_function_defined() {
  declare -f "$1" > /dev/null
}

# Attempt to detect if the script is running via a GUI or not
# TODO - Determine where/how we use this generically
detect_terminal_for_ui() {
  [[ ! -t 0 ]] && [[ "${#residual_args}" == "0" ]] && {
    echo "true"
  }
  # SPECIAL TEST FOR MAC
  [[ "$(uname)" == "Darwin" ]] && [[ "$HOME" == "$PWD" ]] && [[ "${#residual_args}" == "0" ]] && {
    echo "true"
  }
}

# Processes incoming arguments and places them in appropriate global variables.  called by the run method.
process_args () {
  local no_more_snp_opts=0
  while [[ $# -gt 0 ]]; do
    case "$1" in
             --) shift && no_more_snp_opts=1 && break ;;
       -h|-help) usage; exit 1 ;;
    -v|-verbose) verbose=1 && shift ;;
      -d|-debug) debug=1 && shift ;;

    -no-version-check) no_version_check=1 && shift ;;

           -mem) echo "!! WARNING !! -mem option is ignored. Please use -J-Xmx and -J-Xms" && shift 2 ;;
     -jvm-debug) require_arg port "$1" "$2" && addDebugger $2 && shift 2 ;;

          -main) custom_mainclass="$2" && shift 2 ;;

     -java-home) require_arg path "$1" "$2" && java_cmd="$2/bin/java" && shift 2 ;;

 -D*|-agentlib*) addJava "$1" && shift ;;
            -J*) addJava "${1:2}" && shift ;;
              *) addResidual "$1" && shift ;;
    esac
  done

  if [[ no_more_snp_opts ]]; then
    while [[ $# -gt 0 ]]; do
      addResidual "$1" && shift
    done
  fi

  is_function_defined process_my_args && {
    myargs=("${residual_args[@]}")
    residual_args=()
    process_my_args "${myargs[@]}"
  }
}

# Actually runs the script.
run() {
  # TODO - check for sane environment

  # process the combined args, then reset "$@" to the residuals
  process_args "$@"
  set -- "${residual_args[@]}"
  argumentCount=$#

  #check for jline terminal fixes on cygwin
  if is_cygwin; then
    stty -icanon min 1 -echo > /dev/null 2>&1
    addJava "-Djline.terminal=jline.UnixTerminal"
    addJava "-Dsbt.cygwin=true"
  fi
  
  # check java version
  if [[ ! $no_version_check ]]; then
    java_version_check
  fi
  
  if [ -n "$custom_mainclass" ]; then
    mainclass=("$custom_mainclass")
  else
    mainclass=("${app_mainclass[@]}")
  fi

  # Now we check to see if there are any java opts on the environment. These get listed first, with the script able to override them.
  if [[ "$JAVA_OPTS" != "" ]]; then
    java_opts="${JAVA_OPTS}"
  fi

  # run sbt
  execRunner "$java_cmd" \
    ${java_opts[@]} \
    "${java_args[@]}" \
    -cp "$(fix_classpath "$app_classpath")" \
    "${mainclass[@]}" \
    "${app_commands[@]}" \
    "${residual_args[@]}"
    
  local exit_code=$?
  if is_cygwin; then
    stty icanon echo > /dev/null 2>&1
  fi
  exit $exit_code
}

# Loads a configuration file full of default command line options for this script.
loadConfigFile() {
  cat "$1" | sed '/^\#/d'
}

# Now check to see if it's a good enough version
# TODO - Check to see if we have a configured default java version, otherwise use 1.6
java_version_check() { 
  readonly java_version=$("$java_cmd" -version 2>&1 | awk -F '"' '/version/ {print $2}')
  if [[ "$java_version" == "" ]]; then
    echo
    echo No java installations was detected.
    echo Please go to http://www.java.com/getjava/ and download
    echo
    exit 1
  elif [[ ! "$java_version" > "1.6" ]]; then
    echo
    echo The java installation you have is not up to date
    echo $app_name requires at least version 1.6+, you have
    echo version $java_version
    echo
    echo Please go to http://www.java.com/getjava/ and download
    echo a valid Java Runtime and install before running $app_name.
    echo
    exit 1
  fi
}

###  ------------------------------- ###
###  Start of customized settings    ###
###  ------------------------------- ###
usage() {
 cat <<EOM
Usage: $script_name [options]

  -h | -help         print this message
  -v | -verbose      this runner is chattier
  -d | -debug        set sbt log level to debug
  -no-version-check  Don't run the java version check.
  -main <classname>  Define a custom main class
  -jvm-debug <port>  Turn on JVM debugging, open at the given port.

  # java version (default: java from PATH, currently $(java -version 2>&1 | grep version))
  -java-home <path>         alternate JAVA_HOME

  # jvm options and output control
  JAVA_OPTS          environment variable, if unset uses "$java_opts"
  -Dkey=val          pass -Dkey=val directly to the java runtime
  -J-X               pass option -X directly to the java runtime
                     (-J is stripped)

  # special option
  --                 To stop parsing built-in commands from the rest of the command-line.
                     e.g.) enabling debug and sending -d as app argument
                     \$ ./start-script -d -- -d

In the case of duplicated or conflicting options, basically the order above
shows precedence: JAVA_OPTS lowest, command line options highest except "--".
EOM
}

###  ------------------------------- ###
###  Main script                     ###
###  ------------------------------- ###

declare -a residual_args
declare -a java_args
declare -a app_commands
declare -r real_script_path="$(realpath "$0")"
declare -r app_home="$(realpath "$(dirname "$real_script_path")")"
# TODO - Check whether this is ok in cygwin...
declare -r lib_dir="$(realpath "${app_home}/../lib")"
declare -a app_mainclass=("com.metamx.tranquility.distribution.DistributionMain")

declare -r script_conf_file="${app_home}/../conf/application.ini"
declare -r app_classpath="$lib_dir/io.druid.tranquility-distribution-0.8.0.jar:$lib_dir/io.druid.tranquility-kafka-0.8.0.jar:$lib_dir/io.druid.tranquility-core-0.8.0.jar:$lib_dir/io.druid.tranquility-server-0.8.0.jar:$lib_dir/org.scala-lang.scala-library-2.11.7.jar:$lib_dir/com.metamx.scala-util_2.11-1.11.6.jar:$lib_dir/com.metamx.loglady_2.11-1.1.0-mmx.jar:$lib_dir/org.skife.config.config-magic-0.9.jar:$lib_dir/com.google.guava.guava-16.0.1.jar:$lib_dir/com.fasterxml.jackson.core.jackson-annotations-2.4.6.jar:$lib_dir/com.fasterxml.jackson.core.jackson-core-2.4.6.jar:$lib_dir/com.fasterxml.jackson.core.jackson-databind-2.4.6.jar:$lib_dir/net.sf.opencsv.opencsv-2.3.jar:$lib_dir/io.netty.netty-3.10.5.Final.jar:$lib_dir/javax.validation.validation-api-1.1.0.Final.jar:$lib_dir/commons-lang.commons-lang-2.6.jar:$lib_dir/org.scalaj.scalaj-time_2.11-0.5.jar:$lib_dir/org.yaml.snakeyaml-1.11.jar:$lib_dir/com.fasterxml.jackson.dataformat.jackson-dataformat-smile-2.4.6.jar:$lib_dir/com.fasterxml.jackson.datatype.jackson-datatype-joda-2.4.6.jar:$lib_dir/com.fasterxml.jackson.module.jackson-module-scala_2.11-2.4.5.jar:$lib_dir/org.scala-lang.scala-reflect-2.11.2.jar:$lib_dir/com.thoughtworks.paranamer.paranamer-2.6.jar:$lib_dir/com.google.code.findbugs.jsr305-2.0.1.jar:$lib_dir/mysql.mysql-connector-java-5.1.18.jar:$lib_dir/com.h2database.h2-1.3.158.jar:$lib_dir/c3p0.c3p0-0.9.1.2.jar:$lib_dir/jline.jline-0.9.94.jar:$lib_dir/junit.junit-3.8.1.jar:$lib_dir/org.apache.zookeeper.zookeeper-3.4.6.jar:$lib_dir/org.codehaus.jackson.jackson-mapper-asl-1.9.13.jar:$lib_dir/org.codehaus.jackson.jackson-core-asl-1.9.13.jar:$lib_dir/com.twitter.util-core_2.11-6.30.0.jar:$lib_dir/com.twitter.util-function_2.11-6.30.0.jar:$lib_dir/com.twitter.jsr166e-1.0.0.jar:$lib_dir/org.scala-lang.modules.scala-parser-combinators_2.11-1.0.4.jar:$lib_dir/com.twitter.finagle-core_2.11-6.31.0.jar:$lib_dir/com.twitter.util-app_2.11-6.30.0.jar:$lib_dir/com.twitter.util-registry_2.11-6.30.0.jar:$lib_dir/com.twitter.util-cache_2.11-6.30.0.jar:$lib_dir/com.twitter.util-codec_2.11-6.30.0.jar:$lib_dir/commons-codec.commons-codec-1.9.jar:$lib_dir/com.twitter.util-collection_2.11-6.30.0.jar:$lib_dir/javax.inject.javax.inject-1.jar:$lib_dir/commons-collections.commons-collections-3.2.1.jar:$lib_dir/com.twitter.util-hashing_2.11-6.30.0.jar:$lib_dir/com.twitter.util-jvm_2.11-6.30.0.jar:$lib_dir/com.twitter.util-lint_2.11-6.30.0.jar:$lib_dir/com.twitter.util-logging_2.11-6.30.0.jar:$lib_dir/com.twitter.util-stats_2.11-6.30.0.jar:$lib_dir/com.twitter.finagle-http_2.11-6.31.0.jar:$lib_dir/org.slf4j.slf4j-api-1.7.12.jar:$lib_dir/org.slf4j.jul-to-slf4j-1.7.12.jar:$lib_dir/commons-logging.commons-logging-1.1.3.jar:$lib_dir/io.druid.druid-server-0.9.0.jar:$lib_dir/io.druid.druid-processing-0.9.0.jar:$lib_dir/io.druid.druid-common-0.9.0.jar:$lib_dir/io.druid.druid-api-0.3.16.jar:$lib_dir/com.metamx.java-util-0.27.7.jar:$lib_dir/joda-time.joda-time-2.8.2.jar:$lib_dir/org.mozilla.rhino-1.7R5.jar:$lib_dir/com.jayway.jsonpath.json-path-2.1.0.jar:$lib_dir/aopalliance.aopalliance-1.0.jar:$lib_dir/io.airlift.airline-0.7.jar:$lib_dir/com.google.code.findbugs.annotations-2.0.3.jar:$lib_dir/org.hibernate.hibernate-validator-5.1.3.Final.jar:$lib_dir/org.jboss.logging.jboss-logging-3.1.3.GA.jar:$lib_dir/com.fasterxml.classmate-1.0.0.jar:$lib_dir/commons-io.commons-io-2.4.jar:$lib_dir/org.apache.commons.commons-dbcp2-2.0.1.jar:$lib_dir/org.apache.commons.commons-pool2-2.2.jar:$lib_dir/commons-pool.commons-pool-1.6.jar:$lib_dir/javax.el.javax.el-api-3.0.0.jar:$lib_dir/com.fasterxml.jackson.datatype.jackson-datatype-guava-2.4.6.jar:$lib_dir/org.jdbi.jdbi-2.63.1.jar:$lib_dir/org.apache.logging.log4j.log4j-jul-2.5.jar:$lib_dir/org.slf4j.jcl-over-slf4j-1.7.12.jar:$lib_dir/net.java.dev.jets3t.jets3t-0.9.4.jar:$lib_dir/javax.activation.activation-1.1.1.jar:$lib_dir/org.bouncycastle.bcprov-jdk15on-1.52.jar:$lib_dir/com.jamesmurty.utils.java-xmlbuilder-1.1.jar:$lib_dir/net.iharder.base64-2.3.8.jar:$lib_dir/com.metamx.bytebuffer-collections-0.2.4.jar:$lib_dir/com.metamx.extendedset-1.3.9.jar:$lib_dir/org.roaringbitmap.RoaringBitmap-0.5.16.jar:$lib_dir/com.metamx.emitter-0.3.6.jar:$lib_dir/com.metamx.http-client-1.0.4.jar:$lib_dir/com.ning.compress-lzf-1.0.3.jar:$lib_dir/com.google.protobuf.protobuf-java-2.5.0.jar:$lib_dir/com.ibm.icu.icu4j-4.8.1.jar:$lib_dir/net.jpountz.lz4.lz4-1.3.0.jar:$lib_dir/org.mapdb.mapdb-1.0.8.jar:$lib_dir/io.druid.druid-aws-common-0.9.0.jar:$lib_dir/com.amazonaws.aws-java-sdk-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-support-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-core-1.10.21.jar:$lib_dir/org.apache.httpcomponents.httpclient-4.5.1.jar:$lib_dir/org.apache.httpcomponents.httpcore-4.4.3.jar:$lib_dir/com.amazonaws.aws-java-sdk-simpledb-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-simpleworkflow-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-storagegateway-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-route53-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-s3-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-kms-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-importexport-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-sts-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-sqs-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-rds-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-redshift-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-elasticbeanstalk-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-glacier-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-sns-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-iam-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-datapipeline-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-elasticloadbalancing-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-emr-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-elasticache-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-elastictranscoder-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-ec2-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-dynamodb-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cloudtrail-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cloudwatch-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-logs-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cognitoidentity-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cognitosync-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-directconnect-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cloudformation-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cloudfront-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-kinesis-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-opsworks-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-ses-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-autoscaling-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cloudsearch-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cloudwatchmetrics-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-swf-libraries-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-codedeploy-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-codepipeline-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-config-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-lambda-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-ecs-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-cloudhsm-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-ssm-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-workspaces-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-machinelearning-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-directory-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-efs-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-codecommit-1.10.21.jar:$lib_dir/com.amazonaws.aws-java-sdk-devicefarm-1.10.21.jar:$lib_dir/io.druid.druid-console-0.0.2.jar:$lib_dir/com.metamx.server-metrics-0.2.8.jar:$lib_dir/commons-cli.commons-cli-1.2.jar:$lib_dir/org.glassfish.javax.el-3.0.0.jar:$lib_dir/org.apache.curator.curator-framework-2.9.1.jar:$lib_dir/org.apache.curator.curator-client-2.9.1.jar:$lib_dir/org.apache.curator.curator-x-discovery-2.9.1.jar:$lib_dir/org.apache.curator.curator-recipes-2.9.1.jar:$lib_dir/com.fasterxml.jackson.jaxrs.jackson-jaxrs-json-provider-2.4.6.jar:$lib_dir/com.fasterxml.jackson.jaxrs.jackson-jaxrs-base-2.4.6.jar:$lib_dir/com.fasterxml.jackson.module.jackson-module-jaxb-annotations-2.4.6.jar:$lib_dir/com.fasterxml.jackson.jaxrs.jackson-jaxrs-smile-provider-2.4.6.jar:$lib_dir/com.sun.jersey.jersey-server-1.19.jar:$lib_dir/com.sun.jersey.jersey-core-1.19.jar:$lib_dir/javax.ws.rs.jsr311-api-1.1.1.jar:$lib_dir/com.sun.jersey.contribs.jersey-guice-1.19.jar:$lib_dir/org.eclipse.jetty.jetty-server-9.2.5.v20141112.jar:$lib_dir/javax.servlet.javax.servlet-api-3.1.0.jar:$lib_dir/org.eclipse.jetty.jetty-http-9.2.5.v20141112.jar:$lib_dir/org.eclipse.jetty.jetty-util-9.2.5.v20141112.jar:$lib_dir/org.eclipse.jetty.jetty-io-9.2.5.v20141112.jar:$lib_dir/org.eclipse.jetty.jetty-proxy-9.2.5.v20141112.jar:$lib_dir/org.eclipse.jetty.jetty-client-9.2.5.v20141112.jar:$lib_dir/io.tesla.aether.tesla-aether-0.0.5.jar:$lib_dir/org.eclipse.aether.aether-api-0.9.0.M2.jar:$lib_dir/org.eclipse.aether.aether-spi-0.9.0.M2.jar:$lib_dir/org.eclipse.aether.aether-util-0.9.0.M2.jar:$lib_dir/org.eclipse.aether.aether-impl-0.9.0.M2.jar:$lib_dir/org.eclipse.aether.aether-connector-file-0.9.0.M2.jar:$lib_dir/io.tesla.aether.aether-connector-okhttp-0.0.9.jar:$lib_dir/com.squareup.okhttp.okhttp-1.0.2.jar:$lib_dir/org.apache.maven.wagon.wagon-provider-api-2.4.jar:$lib_dir/org.codehaus.plexus.plexus-utils-3.0.15.jar:$lib_dir/org.apache.maven.maven-aether-provider-3.1.1.jar:$lib_dir/org.apache.maven.maven-model-3.1.1.jar:$lib_dir/org.apache.maven.maven-model-builder-3.1.1.jar:$lib_dir/org.codehaus.plexus.plexus-interpolation-1.19.jar:$lib_dir/org.apache.maven.maven-repository-metadata-3.1.1.jar:$lib_dir/org.apache.maven.maven-settings-builder-3.1.1.jar:$lib_dir/org.apache.maven.maven-settings-3.1.1.jar:$lib_dir/org.antlr.antlr4-runtime-4.0.jar:$lib_dir/org.abego.treelayout.org.abego.treelayout.core-1.0.1.jar:$lib_dir/net.spy.spymemcached-2.11.7.jar:$lib_dir/org.eclipse.jetty.jetty-servlet-9.2.5.v20141112.jar:$lib_dir/org.eclipse.jetty.jetty-security-9.2.5.v20141112.jar:$lib_dir/org.eclipse.jetty.jetty-servlets-9.2.5.v20141112.jar:$lib_dir/org.eclipse.jetty.jetty-continuation-9.2.5.v20141112.jar:$lib_dir/com.ircclouds.irc.irc-api-1.0-0014.jar:$lib_dir/com.maxmind.geoip2.geoip2-0.4.0.jar:$lib_dir/com.maxmind.maxminddb.maxminddb-0.2.0.jar:$lib_dir/com.google.http-client.google-http-client-1.15.0-rc.jar:$lib_dir/xpp3.xpp3-1.1.4c.jar:$lib_dir/com.google.http-client.google-http-client-jackson2-1.15.0-rc.jar:$lib_dir/org.apache.derby.derby-10.11.1.1.jar:$lib_dir/org.apache.derby.derbynet-10.11.1.1.jar:$lib_dir/org.apache.derby.derbyclient-10.11.1.1.jar:$lib_dir/com.google.inject.guice-4.0.jar:$lib_dir/com.google.inject.extensions.guice-servlet-4.0.jar:$lib_dir/com.google.inject.extensions.guice-multibindings-4.0.jar:$lib_dir/org.apache.kafka.kafka_2.11-0.8.2.2.jar:$lib_dir/com.yammer.metrics.metrics-core-2.2.0.jar:$lib_dir/net.sf.jopt-simple.jopt-simple-3.2.jar:$lib_dir/com.101tec.zkclient-0.3.jar:$lib_dir/org.apache.kafka.kafka-clients-0.8.2.2.jar:$lib_dir/org.xerial.snappy.snappy-java-1.1.1.7.jar:$lib_dir/ch.qos.logback.logback-core-1.1.2.jar:$lib_dir/ch.qos.logback.logback-classic-1.1.2.jar:$lib_dir/org.apache.logging.log4j.log4j-to-slf4j-2.4.jar:$lib_dir/org.apache.logging.log4j.log4j-api-2.4.jar:$lib_dir/org.slf4j.log4j-over-slf4j-1.7.12.jar:$lib_dir/org.scalatra.scalatra_2.11-2.3.1.jar:$lib_dir/org.scalatra.scalatra-common_2.11-2.3.1.jar:$lib_dir/org.clapper.grizzled-slf4j_2.11-1.0.2.jar:$lib_dir/org.scalatra.rl.rl_2.11-0.4.10.jar:$lib_dir/com.googlecode.juniversalchardet.juniversalchardet-1.0.3.jar:$lib_dir/eu.medsea.mimeutil.mime-util-2.1.3.jar:$lib_dir/org.joda.joda-convert-1.7.jar:$lib_dir/org.scala-lang.modules.scala-xml_2.11-1.0.3.jar"

addJava "-Dlogback.configurationFile=${app_home}/../conf/logback.xml"
# java_cmd is overrode in process_args when -java-home is used
declare java_cmd=$(get_java_cmd)

# if configuration files exist, prepend their contents to $@ so it can be processed by this runner
[[ -f "$script_conf_file" ]] && set -- $(loadConfigFile "$script_conf_file") "$@"

run "$@"
